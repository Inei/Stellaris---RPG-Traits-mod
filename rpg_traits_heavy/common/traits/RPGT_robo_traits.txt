###############################################
# Initial traits - These are varied, powerful, and not available early-game
###############################################

###################
# Macro Types - all exclusive
###################

trait_robodesign_terminators = {		# extremely warfare-oriented robots
	cost = 0
	sorting_priority = 20
	initial = yes
	randomized = no
	modification = no
	allowed_archetypes = { MACHINE }
	opposites = {  }

	modifier = {
		tile_resource_unity_mult = -0.5
		tile_resource_energy_mult = -0.25
		tile_resource_food_mult = -1
		tile_resource_minerals_mult = -0.5
		tile_resource_engineering_research_mult = -0.25
		tile_resource_physics_research_mult = -0.25
		tile_resource_society_research_mult = -0.25
		species_leader_exp_gain = -0.25
		
		pop_robot_build_speed_mult = -0.5
		pop_robot_build_cost_mult = 4			# very large investment into specialized military hardware
		pop_robot_upkeep_mult = 1
		pop_consumer_goods_mult = 1
		army_damage_mult = 3					# Deadly robotic drones
		army_health = 3
	}
}
trait_robodesign_miners = {		# rogue mining drones
	cost = 0
	sorting_priority = 20
	initial = yes
	randomized = no
	modification = no
	allowed_archetypes = { MACHINE }
	opposites = {  }

	modifier = {
		tile_resource_unity_mult = -0.5
		tile_resource_energy_mult = -0.5
		tile_resource_food_mult = -1
		tile_resource_minerals_mult = 3					# staggering bonus to minerals
		tile_resource_engineering_research_mult = -0.5
		tile_resource_physics_research_mult = -0.5
		tile_resource_society_research_mult = -0.5
		species_leader_exp_gain = -0.5
		
		army_damage_mult = -0.5
		army_health = -0.25
	}
}
trait_robodesign_servitors = {		# rogue servitors, manage civil aspects
	cost = 0
	sorting_priority = 20
	initial = yes
	randomized = no
	modification = no
	allowed_archetypes = { MACHINE }
	opposites = {  }

	modifier = {
		tile_resource_unity_mult = 0.5
		tile_resource_energy_mult = 1
		tile_resource_food_mult = -1
		tile_resource_minerals_mult = -0.5
		tile_resource_engineering_research_mult = -0.25
		tile_resource_physics_research_mult = -0.25
		tile_resource_society_research_mult = -0.25
		species_leader_exp_gain = -0.25
		
		army_damage_mult = -0.25
		pop_owner_happiness = 0.1
	}
}
trait_robodesign_harvesters = {		# for if you really want to screw yourself
	cost = -5
	sorting_priority = 20
	initial = yes
	randomized = no
	modification = no
	allowed_archetypes = { MACHINE }
	opposites = {  }

	modifier = {
		tile_resource_unity_mult = -0.5
		tile_resource_energy_mult = -0.75
		tile_resource_food_mult = 9
		tile_resource_minerals_mult = -0.75
		tile_resource_engineering_research_mult = -0.5
		tile_resource_physics_research_mult = -0.5
		tile_resource_society_research_mult = -0.5
		species_leader_exp_gain = -0.5
		
		army_damage_mult = -0.75
		army_health = -0.75
	}
}
trait_robodesign_science = {		# giant scientific mainframe
	cost = 0
	sorting_priority = 20
	initial = yes
	randomized = no
	modification = no
	allowed_archetypes = { MACHINE }
	opposites = {  }

	modifier = {
		tile_resource_unity_mult = -0.25
		tile_resource_food_mult = -1
		tile_resource_minerals_mult = -0.5
		tile_resource_engineering_research_mult = 2
		tile_resource_physics_research_mult = 2
		tile_resource_society_research_mult = 2
		
		army_damage_mult = -0.75
		army_health = -0.75
		pop_robot_upkeep_mult = 3		# will have a constant struggle for MOAR power
		pop_consumer_goods_mult = 1		# struggle to support large pop, as to not be completely OP in science department
	}
}
trait_robodesign_androids = {		# droids that became self-aware. Good all-rounders, but not like uploaded organics
	cost = 0
	sorting_priority = 20
	initial = yes
	randomized = no
	modification = no
	allowed_archetypes = { MACHINE }
	opposites = {  }

	modifier = {
		
	}
}
trait_robodesign_synthetic = {		# uploaded organics, gives you the AP perk on game_start
	cost = 5
	sorting_priority = 20
	initial = yes
	randomized = no
	modification = no
	allowed_archetypes = { MACHINE }
	opposites = {  }

	modifier = {
		# gives the trait_robotic_3 effects
	}
}


#####################################
# Add-ons
#####################################



trait_robot_double_jointed = {
	cost = 1
	opposites = { "trait_robot_bulky" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_resettlement_cost_mult = -0.5
		tile_resource_energy_mult = 0.25
		army_damage_mult = 0.25
	}
}

trait_robot_bulky = {
	cost = -1
	opposites = { "trait_robot_double_jointed" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_resettlement_cost_mult = 3
		tile_resource_energy_mult = -0.25
	}
}

trait_robot_enhanced_memory = {
	cost = 2

	allowed_archetypes = { ROBOT MACHINE }
	
	opposites = { trait_robotic_1 trait_robotic_2 } # Synth only

	modifier = {
		leader_skill_levels = 40		# screw the limits
	}
}

trait_robot_emotion_emulators = {
	cost = 1
	opposites = { "trait_robot_uncanny" }
	allowed_archetypes = { MACHINE }
	custom_tooltip = TRAIT_EMOTION_EMULATORS_EFFECT
}

trait_robot_uncanny = {
	cost = -1
	opposites = { "trait_robot_emotion_emulators" }
	allowed_archetypes = { MACHINE }
	custom_tooltip = TRAIT_UNCANNY_EFFECT
}

trait_robot_durable = {
	cost = 1
	opposites = { "trait_robot_durable2" "trait_robot_high_maintenance" "trait_robot_high_maintenance2" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_consumer_goods_mult = -0.5
	}
}

trait_robot_durable2 = {
	cost = 2
	opposites = { "trait_robot_durable" "trait_robot_high_maintenance" "trait_robot_high_maintenance2" }
	prerequisites = { tech_robot_durable2 }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_consumer_goods_mult = -1
	}
}

trait_robot_high_maintenance = {
	cost = -2
	opposites = { "trait_robot_durable2" "trait_robot_durable" "trait_robot_high_maintenance2" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_consumer_goods_mult = 2
	}
}

trait_robot_high_maintenance2 = {
	cost = -4
	opposites = { "trait_robot_durable2" "trait_robot_durable" "trait_robot_high_maintenance" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_consumer_goods_mult = 4
	}
}

trait_robot_learning_algorithms = {
	cost = 2
	opposites = { trait_robotic_1 trait_robotic_2 trait_robodesign_science "trait_robot_crude_neural_network" "trait_robot_crude_neural_network2" }

	allowed_archetypes = { MACHINE }

	modifier = {
		species_leader_exp_gain = 1
		tile_resource_engineering_research_mult = 0.5
		tile_resource_physics_research_mult = 0.5
		tile_resource_society_research_mult = 0.5
	}
}

trait_robot_crude_neural_network = {
	cost = -2
	opposites = { trait_robotic_1 trait_robotic_2 trait_robodesign_science "trait_robot_learning_algorithms" }

	allowed_archetypes = { MACHINE }
	
	modifier = {
		species_leader_exp_gain = -0.5
		tile_resource_engineering_research_mult = -0.25
		tile_resource_physics_research_mult = -0.25
		tile_resource_society_research_mult = -0.25
	}
}

trait_robot_crude_neural_network2 = {
	cost = -2
	opposites = { "trait_robot_learning_algorithms" }

	allowed_archetypes = { ROBOT MACHINE }

	opposites = { trait_robotic_1 trait_robotic_2 } # Synth only
	
	modifier = {
		species_leader_exp_gain = -0.95
		tile_resource_engineering_research_mult = -0.5
		tile_resource_physics_research_mult = -0.5
		tile_resource_society_research_mult = -0.5
	}
}

trait_robot_mass_produced = {
	cost = 4
	opposites = { "trait_robot_custom_made" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_robot_build_speed_mult = 9
	}
}

trait_robot_custom_made = {
	cost = -4
	opposites = { "trait_robot_mass_produced" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_robot_build_speed_mult = -0.8
	}
}
trait_robot_recycled = {
	cost = 4
	opposites = { "trait_robot_luxurious" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_robot_build_cost_mult = -0.8
	}
}

trait_robot_luxurious = {
	cost = -4
	opposites = { "trait_robot_recycled" }

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_robot_build_cost_mult = 3
	}
}




